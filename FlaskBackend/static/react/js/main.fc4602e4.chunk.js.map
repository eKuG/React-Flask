{"version":3,"sources":["components/LandingPage/Landing.js","components/InstructionPage/Instructions.js","components/UploadPage/Upload.js","components/EditorPage/Editor.js","components/EditorPage/STDIN.js","components/EditorPage/EditorPage.js","components/OutputPage/Output.js","components/ExitPage/Exit.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Landing","Container","Grid","row","item","lg","class","to","Button","variant","color","useStyles","makeStyles","theme","root","margin","spacing","input","display","Instructions","classes","Typography","align","justify","alignItems","sm","title","src","frameborder","target","rel","href","className","component","Upload","props","state","file","handleChange","bind","event","this","setState","URL","createObjectURL","files","maxWidth","gutterBottom","container","type","style","accept","id","onChange","htmlFor","disabled","alt","height","width","React","Component","newValue","console","log","Editor","placeholder","mode","name","fontSize","showPrintMargin","showGutter","highlightActiveLine","value","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","STDIN","useState","setValue","noValidate","autoComplete","TextField","label","multiline","fullWidth","rowsMax","helperText","EditorPage","paper","padding","secondaryTail","backgroundColor","palette","secondary","main","Output","Paper","elevation","Exit","Main","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.fc4602e4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container, Grid, Button } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport './landing.css';\r\n\r\nconst Landing = () => {\r\n  \r\n  return (\r\n    <body>\r\n    <Container>\r\n      <Grid row>\r\n        <Grid item lg={12}>\r\n          <div class=\"content\">\r\n            <h1>Code Capture</h1>\r\n            <h3>From pen and paper to editor and compiler!</h3>\r\n            <hr />\r\n            <Link to=\"/instructions\">\r\n              <Button variant=\"contained\" color=\"secondary\" >\r\n                    Get Started!\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Button, Grid,Container } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport './Instructions.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\n\r\nexport default function Instructions() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container>\r\n      <br/>\r\n      < Typography variant=\"h2\" align=\"center\">\r\n        Instructions for the activity\r\n      </Typography>\r\n      <Grid\r\n        row\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item \r\n          sm={12}\r\n        >\r\n          <iframe\r\n            title=\"ppt\"\r\n            src=\"https://onedrive.live.com/embed?cid=703B19A0781C4859&amp;resid=703B19A0781C4859%21148&amp;authkey=AHvfQz-RUmtl0Co&amp;em=2&amp;wdAr=1.7777777777777777\"\r\n            frameborder=\"0\"\r\n          >\r\n            This is an embedded\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://office.com\">\r\n                Microsoft Office\r\n            </a>\r\n              presentation, powered by\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://office.com/webapps\">\r\n                Office\r\n            </a>.\r\n          </iframe>\r\n\r\n        </Grid>\r\n        <Grid item justify=\"flex-end\" align=\"right\">\r\n        <div className={classes.root}>\r\n            <Link to=\"/upload\">\r\n              <Button variant=\"contained\" color=\"secondary\" component=\"span\">\r\n                Continue\r\n              </Button>\r\n            </Link>\r\n        </div>\r\n        </Grid>\r\n      </Grid>\r\n      <br />\r\n      \r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\n","import { Typography, Container, Grid, Button } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nclass Upload extends React.Component {\r\n    constructor(props){\r\n      super(props)\r\n      this.state = {\r\n        file: null\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    handleChange(event) {\r\n      this.setState({\r\n        file: URL.createObjectURL(event.target.files[0])\r\n      })\r\n    }\r\n    render() {\r\n        \r\n      return (\r\n        \r\n          <Container maxWidth=\"sm\">\r\n            <br/>\r\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" gutterBottom>\r\n              Upload code image\r\n            </Typography>\r\n            {/* <Typography variant=\"h5\" align=\"center\" paragraph>\r\n              Something short and leading about the collection below—its contents, the creator, etc.\r\n              Make it short and sweet, but not too short so folks don&apos;t simply skip over it\r\n              entirely.\r\n            </Typography> */}\r\n            <div>\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item>\r\n                    <input \r\n                        type=\"file\"\r\n                        style={{ display: 'none' }}\r\n                        accept=\"image/*\"\r\n                        id=\"contained-button-file\"  \r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <label htmlFor=\"contained-button-file\">\r\n                        <Button variant=\"contained\" color=\"secondary\" component=\"span\">\r\n                            Capture\r\n                        </Button>\r\n                    </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link to=\"/edit\">\r\n                  { this.state.file ?\r\n                    <Button variant=\"contained\" color=\"secondary\" component=\"span\">\r\n                      Continue to editor\r\n                    </Button> \r\n                    :\r\n                    <Button variant=\"contained\" disabled color=\"secondary\" component=\"span\">\r\n                      Continue to editor\r\n                    </Button>\r\n                  }\r\n                  </Link>  \r\n                </Grid>\r\n              </Grid>\r\n            </div> \r\n            <br />\r\n            <Typography variant=\"h6\" align=\"center\">\r\n                  Image preview\r\n            </Typography>\r\n            <hr/>  \r\n            <Grid\r\n                row\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n              <Grid item align=\"center\">           \r\n                  <img\r\n                      alt=\"\" src={this.state.file}\r\n                      height=\"50%\"\r\n                      width=\"50%\"\r\n                  />\r\n              </Grid>\r\n            </Grid>\r\n          \r\n        </Container>\r\n      );\r\n    }\r\n  }\r\nexport default Upload;","import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\n \r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/theme-github\";\r\n \r\nfunction onChange(newValue) {\r\n  console.log(\"change\", newValue);\r\n}\r\n \r\n// Render editor\r\nfunction Editor() {\r\n  return <AceEditor\r\n  placeholder=\"Placeholder Text\"\r\n  mode=\"javascript\"\r\n  theme=\"monokai\"\r\n  name=\"blah2\"\r\n  onChange={onChange}\r\n  width=\"100%\"\r\n  fontSize={14}\r\n  showPrintMargin={true}\r\n  showGutter={true}\r\n  highlightActiveLine={true}\r\n  value={`console.log(\"Hello world!\")`}\r\n  setOptions={{\r\n  enableBasicAutocompletion: true,\r\n  enableLiveAutocompletion: true,\r\n  enableSnippets: true,\r\n  showLineNumbers: true,\r\n  tabSize: 2,\r\n  }}/>\r\n     \r\n}\r\nexport default Editor;\r\n","import React from 'react';\r\nimport {TextField,Grid} from '@material-ui/core';\r\n\r\n\r\n\r\nexport default function STDIN() {\r\n  const [value, setValue] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Grid item >\r\n        <form\r\n            noValidate\r\n            autoComplete=\"off\">\r\n        \r\n            <TextField\r\n                id=\"outlined-multiline-flexible \"\r\n                label=\"STDIN\"\r\n                multiline\r\n                color=\"secondary\"\r\n                fullWidth\r\n                rowsMax={4}\r\n                value={value}\r\n                onChange={handleChange}\r\n                variant=\"filled\"\r\n                helperText=\"Standard input\"\r\n            />\r\n        </form>\r\n\r\n    </Grid>\r\n      \r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport Editor from './Editor';\r\nimport STDIN from './STDIN'\r\nimport { Container,Grid,Button,Typography } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n}));\r\n\r\nfunction EditorPage() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container>\r\n            <br/>\r\n            < Typography variant=\"h2\" align=\"center\">\r\n                Your Code\r\n            </Typography>\r\n            <br/>\r\n            <Grid\r\n                row\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                <Grid item>\r\n                        <Editor/>   \r\n                </Grid>\r\n            </Grid>   \r\n            <br />\r\n            <STDIN/>\r\n            <Grid row>\r\n            <Grid item justify=\"flex-end\" align=\"right\">\r\n                <div className={classes.root}>\r\n                    <Link to=\"/out\">\r\n                        <Button variant=\"contained\" color=\"secondary\" component=\"span\">\r\n                            Show output\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default EditorPage;\r\n","import React from 'react';\r\nimport { Paper, Typography, Button, Grid,Container } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    paper: {\r\n        padding: '6px 16px',\r\n    },\r\n    secondaryTail: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n}));\r\n  \r\n\r\nfunction Output() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container>\r\n            <br/>\r\n            < Typography variant=\"h2\" align=\"center\">\r\n                Output\r\n            </Typography>\r\n            <br/>\r\n            <Grid\r\n                row\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                <Grid item>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Typography  variant=\"h5\" component=\"h1\">\r\n                        Code\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" >\r\n                        console.log(\"Hello World!\")\r\n                    </Typography>\r\n                </Paper>\r\n                </Grid>\r\n                <br />\r\n                <Grid item>\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <Typography  variant=\"h5\" component=\"h1\">\r\n                            Input\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" >\r\n                            {\"/* input here */\"}\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <br /> \r\n                <Grid item>\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <Typography  variant=\"h5\" component=\"h1\">\r\n                            Output\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" >\r\n                            {\"Hello World!\"}\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <br/>     \r\n                <Grid item justify=\"flex-end\" align=\"right\">\r\n                <div className={classes.root}>\r\n                    <Link to=\"/done\">\r\n                        <Button variant=\"contained\" color=\"secondary\" component=\"span\">\r\n                            Finish\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Output;\r\n","import React from 'react';\r\nimport { Container, Grid, Button } from '@material-ui/core';\r\nimport '../LandingPage/landing.css';\r\n\r\nconst Exit = () => {\r\n  \r\n  return (\r\n    <body>\r\n    <Container>\r\n      <Grid row>\r\n        <Grid item lg={12}>\r\n          <div class=\"content\">\r\n            <h2> Thank you for using Code Capture! </h2>\r\n              <h3>\r\n                {`If you have the time, please fill put a short feedback of the platform!\\n\r\n                Then please head over to the HoC site to collect your certificate.`}\r\n              </h3>\r\n              <hr />\r\n              \r\n              <Button variant=\"contained\" color=\"secondary\" >\r\n                Give Feedback\r\n              </Button>\r\n              <br />\r\n              <br/>\r\n              <Button variant=\"contained\" color=\"secondary\" >\r\n                Collect your certificate!      \r\n              </Button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Exit;\r\n","import React from 'react';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nimport Landing from './LandingPage/Landing';\r\nimport Instructions from './InstructionPage/Instructions';\r\nimport Upload from './UploadPage/Upload';\r\nimport EditorPage from './EditorPage/EditorPage';\r\nimport Output from './OutputPage/Output';\r\nimport Exit from './ExitPage/Exit';\r\n\r\nfunction Main() {\r\n  return (\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/edit\">\r\n            <EditorPage />\r\n          </Route>\r\n          <Route path=\"/instructions\">\r\n            <Instructions />\r\n          </Route>\r\n          <Route path=\"/upload\">\r\n            <Upload />\r\n          </Route>\r\n          <Route path=\"/out\">\r\n            <Output />\r\n          </Route>\r\n          <Route path=\"/done\">\r\n            <Exit />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Landing />\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport Main from './components/Main';\r\n\r\nfunction App() {\r\n  return <Main/>\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}